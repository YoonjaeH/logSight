version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    # ADDED HEALTHCHECK FOR RABBITMQ
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    # ADDED HEALTHCHECK FOR TIMESCALEDB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  ingestor:
    build:
      context: ./ingestor
    container_name: ingestor
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy

  worker:
    build:
      context: ./worker
    container_name: worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      timescaledb:
        condition: service_healthy

  api:
    build:
      context: ./api
    container_name: api
    ports:
      - "8080:8080"
    depends_on:
      timescaledb:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  rabbitmq_data:
  timescaledb_data: